name: Deploy and Expose Flask App

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: false
        default: main
      target_name:
        description: "Target environment"
        required: false
        default: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install ngrok
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list > /dev/null
          sudo apt update
          sudo apt install -y ngrok

      # Step 5: Authenticate ngrok
      - name: Authenticate ngrok
        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      # Step 6: Start Flask app and expose with ngrok
      - name: Start Flask app and expose with ngrok
        run: |
          nohup python app.py &
          nohup ngrok http 5000 &
          sleep 10
          curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'

      # Step 7: Display ngrok public URL
      - name: Display ngrok public URL
        run: |
          curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'

